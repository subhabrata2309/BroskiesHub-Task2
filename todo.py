# -*- coding: utf-8 -*-
"""todo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1agA88nb8OOFr4AOeWpUTcSdTvpPHYnYm
"""

def load_tasks(filename):
    try:
        with open(filename, "r") as file:
            return [line.strip() for line in file.readlines()]
    except FileNotFoundError:
        return []

def save_tasks(task_list, filename):
    with open(filename, "w") as file:
        for task in task_list:
            file.write(task + "\n")

def add_task(task, task_list):
    task_list.append(task)
    print(f'"{task}" added.')

def remove_task(task, task_list):
    task = task.strip().lower()
    for t in task_list:
        if t.lower() == task:
            task_list.remove(t)
            print(f'"{t}" removed.')
            return
    print("Task not found.")

def view_tasks(task_list):
    if not task_list:
        print("No tasks found.")
    else:
        print("Your tasks:")
        for i, task in enumerate(task_list, 1):
            print(f"{i}. {task}")



filename = "tasks.txt"
task_list = load_tasks(filename)

while True:
  user = int(input("Enter 1 to add task, 2 to delete task, 3 to view tasks, 0 to exit: "))

  if user == 1:
      new_task = input("Enter task: ")
      add_task(new_task, task_list)

  elif user == 2:
      remove = input("Enter the task to be removed: ")
      remove_task(remove, task_list)

  elif user == 3:
      view_tasks(task_list)
  elif( user==0):
    break

  else:
      print("Invalid choice.")

  save_tasks(task_list, filename)

'''
Interview Questions

1. How do you open and write to a file in python?

Ans: There are two ways of doing so
i) using open

file = open("filename.txt", "w")  # or "a" for appending
file.write("your text here")
file.close()

ii) using with (it automatically closes the file)

with open("filename.txt", "w") as file:
    file.write("your text here")

2. What are the common file modes?

Ans: The common file modes are as follows:
i) 'r' to read the file
ii) 'w' to write in a file (the data which is there will be replaced/overwritten)
iii) 'a' to append (whatever is written is added after what was originally there in the file)

3. What is the use of .strip()?

Ans: The use of .strip() in python is to remove any trailing to be beginning spaces

4. How do Lists work in Python?

Ans: List in python can store more than one value index wise and the data can be heterogeneous
we can very easily access the data using the index and can delete, add , view data as per our need

5. What is the difference between .append() and insert()?

Ans: Using append() the data will always be added to the last of the list
Using insert() the data can be added to anywhere in the list using the index

6. How do you remove elements from a list?

Ans: To remove elements from the list we can
i) use pop method : using indes
ii)using 'del' method:  deletes an element at a specific index or a slice.
iii) using remove: removes the matched value

7. What are context manager(with statement) ?

Answer: A context manager in Python is used to manage resources like files.
The with statement simplifies opening and closing resources automatically.
When using with, Python takes care of closing the file even if an error occurs.

8. How do you loop through a file line by line?

Answer: We can loop through a file line by line using readline() method.

9. What is  a data structure?

Answer: A data structure is a way of organizing and storing data in a computer
so it can be accessed and modified efficiently. Examples include lists, tuples,
 dictionaries, sets, arrays, stacks, queues, etc.

10. What happens if the file does not exist?
Answer: If you try to open a non-existent file in read mode ("r"), Python raises
a FileNotFoundError. However, if you open it in write mode ("w"), Python will
create a new empty file with that name.

'''

